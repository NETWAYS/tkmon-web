{% set home_link = web_link("Index/Index") %}
<h2>{% trans "Restore configuration" %}</h2>

<div class="alert alert-info container-spacer-down">
    <h4>{% trans "Restore backup configuration" %}</h4>
    <p>

    {% trans  %}
    If you have a backup configuration of your TKmon appliance you can restore those settings. This includes:
    {% endtrans  %}

    </p>

    <ul>
        <li>{% trans "Icinga configuration (hosts, services)" %}</li>
        <li>{% trans "Software settings (database, configuration files)" %}</li>
        <li>{% trans "Operating system (IP, DNS, email)" %}</li>
    </ul>


</div>

<div class="alert alert-danger">
    <h4>{% trans "Warning" %}</h4>
    <p>
        {% trans %}
        After the restore the appliance will reboot to complete system changes. Keep in mind that the system is
        not reachable through the network and your Icinga instance is not able to monitor
        your environment during the reboot.
        {% endtrans %}
    </p>

    <p>
        {% trans %}
        If you decide not to reboot, e.g. for testing purposes, keep in mind to do this soon or restart appropriate daemons manually.
        {% endtrans %}
    </p>
</div>

<div id="restore-message-target">

</div>

<form id="restore-configuration">

    <h4>
        {% trans %}
        1. Select a file by clicking on the button
        {% endtrans %}
    </h4>

    <div class="fileupload fileupload-new" data-provides="fileupload">
        <span class="btn btn-file">
            <span class="fileupload-new">{% trans "Select file" %}</span>
            <span class="fileupload-exists">{% trans "Change" %}</span>
            <input id="file" name="file" type="file" />
        </span>
        <span class="fileupload-preview"></span>

        <a href="#" class="close fileupload-exists" data-dismiss="fileupload" style="float: none">Ã—</a>
    </div>

    <h4 class="container-spacer-down-2x">
        {% trans %}
        2. Enter the password of the file or leave the field blank if no password has been set
        {% endtrans %}
    </h4>

    <fieldset>
        <label for="password">{% trans "Password" %}</label>
        <input type="text" name="password" id="password" />
    </fieldset>

    <h4 class="container-spacer-down">
        {% trans %}
        3. If you are sure that you want to restore the backup configuration, click the button below
        {% endtrans %}
    </h4>

    <fieldset>
        <label>{% trans "Restart device after restore (recommended)" %}</label>

        <div class="btn-group" data-toggle="buttons-radio" id="restart-toggle">
            <button type="button" class="btn btn-success" value="1">
                <i class="icon-ok"></i> {% trans "Yes please" %}
            </button>

            <button type="button" class="btn btn-warning" value="0">
                <i class="icon-remove"></i> {% trans "No, dont't do this" %}
            </button>
        </div>

        <input type="hidden" id="restart" name="restart" />
    </fieldset>

    <div class="container-spacer-down"></div>

    <fieldset>
        <label>{% trans "Fire and forget!" %}</label>

        <button type="submit" class="btn btn-danger">
            <i class="icon-cloud-upload"></i> {% trans "Restore!" %}
        </button>
    </fieldset>
</form>

<script>
    require(['jquery', 'bootstrap'], function($) {
        "use strict";

        var form = $('#restore-configuration');
        var messageTarget = $('#restore-message-target');

        // Test for file support api
        if (typeof(window.FileReader) === "undefined") {
            $(form).remove();
            var ele = document.createElement('div');
            $(ele).addClass('alert alert-error')
                    .html(
                        '<h3>HTML5 FileReader support missing</h3> Could not upload configuration. '
                        + 'Please upgrade your browser. Have a look on '
                        + '<a href="http://en.wikipedia.org/wiki/HTML5_File_API">'
                        + 'Wikipedia File API article'
                        + '</a> for more information.'
                    );
            $(messageTarget).append(ele);
            return;
        }

        $('#restart-toggle').find('button').click(function() {
            $('#restart').val($(this).val());
        });

        $(document).ready(function() {
            $('#restart-toggle').find('button:first').button('toggle');
            $('#restart').val(1);
        });

        var rebootValue = function() {
            return $('#restart').val();
        };


        /**
         * Finish handler, append messages to stack
         *
         * @param {boolean} success Flag of operational success
         * @param {string} message
         * @param {string} subCls sub bootstrap alert class e.g. info error or success
         */
        var messageHandler = function(success, message, subCls) {
            var ele = document.createElement('div');
            $(ele).addClass('alert');

            if (typeof subCls === 'undefined') {
                if (success === true) {
                    subCls = 'success';
                } else {
                    subCls = 'error';
                }
            }
            $(ele).addClass('alert-' + subCls);

            $(ele).html(message);

            $(messageTarget).append(ele);

            return ele;
        };

        var startHandler = function() {
            $(messageTarget).find('*').remove();
            $(form).addClass('hide');
        };

        var finishHandler = function() {
            $(form).removeClass('hide');
        };

        var rebootStatus = null;

        var rebootCheckInterval = 1000;

        var rebootTimer = function() {
            $.ajax("{{ web_link('System/Ping') }}", {
                success: function() {
                    if (rebootStatus && rebootStatus === 'DOWN') {
                        rebootStatus = 'UP';

                        var link = '{{ home_link }}';
                        var message = '{% trans 'The system is up again, redirecting to home. If not, please go manually to ' %} ' +
                                '<a href="' + link + '">Index</a>';

                        messageHandler(true, message);

                        window.setInterval(function () {
                            location.href = link;
                        }, 1000);
                    }
                },
                error: function() {
                    if (!rebootStatus) {
                        messageHandler(false, '{% trans "System is down" %}');
                        rebootStatus = 'DOWN';
                    }
                }
            });

            if (!rebootStatus || rebootStatus !== 'UP') {
                window.setTimeout(rebootTimer, rebootCheckInterval);
            }
        };

        var rebootHandler = function() {
            var rebootUrl = '{{ web_link("ApplianceReboot") }}';
            $.ajax(rebootUrl, {
                dataType: 'json',
                data: JSON.stringify({reboot: 1}),
                type: 'POST',
                async: false
            });

            messageHandler(true, '{% trans "System going down" %}', 'info');

            window.setTimeout(rebootTimer, rebootCheckInterval);
        };

        $('#restore-configuration').submit(function(e) {
            e.preventDefault();
            startHandler();
            var restoreUrl = '{{ web_link("System/Configuration/Backup/RestoreConfiguration") }}';
            var password = $(this).find('input#password').val();

            if (password) {
                restoreUrl += '?password=' + encodeURIComponent(password);
            }

            var filesInput = $(this).find('input[type=file]');
            var files = filesInput[0];
            var filesList = files.files;
            var file = filesList[0];

            if (file) {
                var infoElement = messageHandler(true, '{% trans "Upload file:" %}' + '&nbsp;<span>0%</span>');

                var reader = new FileReader();
                reader.readAsBinaryString(file);

                var xhr = new XMLHttpRequest();
                var upload = xhr.upload;

                var updateUploadProgress = function(percentage) {
                    $(infoElement).find('span').html(percentage + '%');
                };

                upload.addEventListener('progress', function(e) {
                    if (e.lengthComputable) {
                        updateUploadProgress(Math.round((e.loaded * 100) / e.total));
                    }
                });

                upload.addEventListener('load', function(e) {
                    messageHandler(true, '{% trans "Begin configuration restore" %}', 'info');
                });

                xhr.onreadystatechange = function() {
                    if (xhr.readyState === this.DONE) {

                        // Progress is not as fast as needed in some browsers
                        // @see https://www.netways.org/issues/2316
                        updateUploadProgress(100);

                        var response = JSON.parse(xhr.responseText);
                        if (typeof response === "object" && "success" in response) {
                            if (response.success !== true) {
                                var messages = [];
                                $.each(response.errors, function(key, errObj) {
                                    messages.push(errObj.message);
                                });

                                messageHandler(false, messages.join(', '));
                                finishHandler();
                            } else {
                                if (rebootValue() === "1") {
                                    messageHandler(true, '{% trans "Configuration restored, initiating reboot. Please be patient for at least 5 minutes" %}', 'info');
                                    rebootHandler();
                                } else {
                                    messageHandler(true, '{% trans "Configuration restored, we do not reboot at will" %}', 'error');
                                }
                            }
                        }
                    }
                };

                xhr.open('POST', restoreUrl);
                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // Add this header because this is an ajax request
                xhr.send(file);
            } else {
                messageHandler(false, '{% trans "File is missing" %}');
                finishHandler();
            }
        })
    });
</script>
