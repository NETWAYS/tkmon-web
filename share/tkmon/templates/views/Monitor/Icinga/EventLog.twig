{% import "macros/icinga.twig" as icinga %}
<div class="page-header" xmlns="http://www.w3.org/1999/html">
    <h2>{%  trans "Icinga event log" %}</h2>
</div>

<h4>
    {% trans %}
    Daemon event log entries to troubleshoot errors
    {% endtrans %}
</h4>

<div class="container-spacer-down"></div>

<div class="alert alert-info">
    <h4>{% trans "Info" %}</h4>

    {% trans %}
    Maximum 200 items are displayed, ordered descending. Press button to refresh:
    {% endtrans %}

    <a href="{{ web_link('Logs') }}" class="btn btn-success">
        <i class="icon-refresh"></i> {% trans "Reload" %}
    </a>

    <!-- Target refresh counter goes into -->
    <div id="site-refresh" class="container-spacer-down"></div>
</div>

<div class="container-spacer-down"></div>

<table class="tkmon-data-table">

    <tr>
        <th>{% trans "Timestamp" %}</th>
        <th>{% trans "Message" %}</th>
    </tr>

{% for entry in data.showlog.log_entries %}
{% if loop.index is odd %}
    <tr class="odd">
{% else %}
    <tr class="even">
{% endif %}

        <td style="white-space: nowrap;">{{ entry.date_time }}</td>
        <td>
                {{ entry.log_entry }}
        </td>
    </tr>
{% endfor %}

</table>

<div class="container-spacer-down"></div>

<script>
    require(['TKMON/jquery/SiteRefreshTimer'], function() {
        /*
         * setTimeout is a hack. Because we're too fast for require.js
         * ticks that deps are not loaded.
         *
         * @todo Update require.js to (maybe) fixed version
         */
        window.setTimeout(function() {
            $('#site-refresh').siteRefreshTimer({
                timeout: parseInt('{{ config.get('view.refresh') }}', 10),
                secondsLabel: '{% trans "seconds" %}',
                stopLabel: '',
                initialLabel: '{% trans "Reload page in" %}'
            });
        },  30);
    });
</script>